def versionMajor = 2
def versionMinor = 3
def versionPatch = 9
def versionBuild = 0

apply from: rootProject.file('gradle/moduleapp.gradle')
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply from: '../ktlint.gradle'


def gitSha() {
    def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }

    return p.text.trim()
}

def gitTimestamp() {
    def p = 'git log -n 1 --format=%at'.execute([], rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }

    return p.text.trim()
}


android {
    packagingOptions {
        resources {
            excludes += "META-INF/*.version"
        }
    }
    defaultConfig {
        applicationId "net.kelmer.correostracker"

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp()}L"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }

    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            resValue("string", "PORT_NUMBER", "8081")
        }
        release {

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildToolsVersion = '29.0.3'

    buildFeatures {
        viewBinding true
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {

    implementation project(':core')
    implementation project(':theme')
    implementation project(':dataApi')
    implementation project(':data')
    implementation project(':detailsApi')
    implementation project(':details')
    implementation project(':listApi')
    implementation project(':list')
    implementation project(':create')
    implementation project(':iap')


    implementation platform(libs.firebase.bom)
    implementation libs.firebase.analytics
    implementation libs.firebase.common
    implementation libs.firebase.crashlytics


    //Test
    testImplementation libs.junit
    testImplementation libs.mockito.core
}

apply plugin: 'com.google.gms.google-services'
check.dependsOn ktlint
