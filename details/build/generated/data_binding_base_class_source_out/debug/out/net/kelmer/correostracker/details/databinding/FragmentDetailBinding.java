// Generated by view binder compiler. Do not edit!
package net.kelmer.correostracker.details.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.kelmer.correostracker.details.R;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final ProgressBar detailLoading;

  @NonNull
  public final Toolbar detailToolbar;

  @NonNull
  public final LinearLayout errorContainer;

  @NonNull
  public final TextView errorText;

  @NonNull
  public final RecyclerView parcelStatusRecyclerView;

  private FragmentDetailBinding(@NonNull RelativeLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull ProgressBar detailLoading, @NonNull Toolbar detailToolbar,
      @NonNull LinearLayout errorContainer, @NonNull TextView errorText,
      @NonNull RecyclerView parcelStatusRecyclerView) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.detailLoading = detailLoading;
    this.detailToolbar = detailToolbar;
    this.errorContainer = errorContainer;
    this.errorText = errorText;
    this.parcelStatusRecyclerView = parcelStatusRecyclerView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.detail_loading;
      ProgressBar detailLoading = ViewBindings.findChildViewById(rootView, id);
      if (detailLoading == null) {
        break missingId;
      }

      id = R.id.detail_toolbar;
      Toolbar detailToolbar = ViewBindings.findChildViewById(rootView, id);
      if (detailToolbar == null) {
        break missingId;
      }

      id = R.id.error_container;
      LinearLayout errorContainer = ViewBindings.findChildViewById(rootView, id);
      if (errorContainer == null) {
        break missingId;
      }

      id = R.id.error_text;
      TextView errorText = ViewBindings.findChildViewById(rootView, id);
      if (errorText == null) {
        break missingId;
      }

      id = R.id.parcelStatusRecyclerView;
      RecyclerView parcelStatusRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (parcelStatusRecyclerView == null) {
        break missingId;
      }

      return new FragmentDetailBinding((RelativeLayout) rootView, appBar, detailLoading,
          detailToolbar, errorContainer, errorText, parcelStatusRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
